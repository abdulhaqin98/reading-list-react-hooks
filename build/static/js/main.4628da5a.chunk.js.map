{"version":3,"sources":["contexts/ThemeContext.js","contexts/AuthContext.js","components/Navbar.js","contexts/BookContext.js","components/BookList.js","components/ThemeToggle.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","setState","Provider","value","this","props","children","Component","AuthContext","AuthContextProvider","isAuthenticated","toggleAuth","Navbar","useContext","theme","style","background","color","onClick","BookContext","BookContextProvider","useState","title","id","books","BookList","className","map","book","key","ThemeToggle","App","ReactDOM","render","document","getElementById"],"mappings":"iSAEaA,EAAeC,0BAuBbC,E,2MAnBZC,MAAQ,CACLC,cAAc,EACdC,MAAO,CAAEC,OAAQ,OAAQC,GAAI,OAAQC,GAAI,QACzCC,KAAM,CAAEH,OAAQ,OAAQC,GAAI,OAAQC,GAAI,S,EAG3CE,YAAc,WACX,EAAKC,SAAS,CAAEP,cAAe,EAAKD,MAAMC,gB,wEAI1C,OACG,kBAACJ,EAAaY,SAAd,CAAuBC,MAAK,eAAMC,KAAKX,MAAX,CAAkBO,YAAaI,KAAKJ,eAC5DI,KAAKC,MAAMC,c,GAfWC,aCFtBC,EAAcjB,0BAuBZkB,E,2MAnBZhB,MAAQ,CACLiB,iBAAiB,G,EAGpBC,WAAa,WACV,EAAKV,SAAS,CACXS,iBAAkB,EAAKjB,MAAMiB,mB,wEAKhC,OACG,kBAACF,EAAYN,SAAb,CAAsBC,MAAK,eAAMC,KAAKX,MAAX,CAAkBkB,WAAYP,KAAKO,cAC1DP,KAAKC,MAAMC,c,GAfUC,aCwBnBK,EAxBA,WAAO,IAAD,EACoBC,qBAAWvB,GAAzCI,EADU,EACVA,aAAcC,EADJ,EACIA,MAAOI,EADX,EACWA,KADX,EAEsBc,qBAAWL,GAA3CE,EAFU,EAEVA,gBAAiBC,EAFP,EAEOA,WACnBG,EAAQpB,EAAeC,EAAQI,EAErC,OACG,yBAAKgB,MAAO,CAAEC,WAAYF,EAAMjB,GAAIoB,MAAOH,EAAMlB,SAC9C,2CACA,yEAGA,6BACA,yBAAKsB,QAASP,GACVD,EAAkB,YAAc,cAEpC,4BACG,oCACA,qCACA,0C,OCpBCS,EAAc5B,0BAkBZ6B,EAhBa,SAACf,GAAW,IAAD,EACVgB,mBAAS,CAChC,CAAEC,MAAO,SAAUC,GAAK,GACxB,CAAED,MAAO,SAAUC,GAAK,GACxB,CAAED,MAAO,SAAUC,GAAK,GACxB,CAAED,MAAO,SAAUC,GAAK,KALS,mBAC7BC,EAD6B,UAOpC,OACG,6BACG,kBAACL,EAAYjB,SAAb,CAAsBC,MAAO,CAACqB,UAC1BnB,EAAMC,YCSJmB,EAnBE,WAAO,IAAD,EAEkBZ,qBAAWvB,GAAzCI,EAFY,EAEZA,aAAcC,EAFF,EAEEA,MAAOI,EAFT,EAESA,KACrByB,EAAUX,qBAAWM,GAArBK,MACFV,EAAQpB,EAAeC,EAAQI,EAErC,OACG,yBAAK2B,UAAU,YAAYX,MAAO,CAAEE,MAAOH,EAAMlB,OAAQoB,WAAYF,EAAMhB,KACxE,4BACI0B,EAAMG,KAAI,SAAAC,GACR,OACG,wBAAIC,IAAKD,EAAKL,GAAIR,MAAO,CAAEC,WAAYF,EAAMjB,KAAO+B,EAAKN,aCL5DQ,EAPK,WAAO,IAChB9B,EAAgBa,qBAAWvB,GAA3BU,YACR,OACG,4BAAQkB,QAASlB,GAAjB,qBCoBS+B,MAjBf,WACG,OACG,yBAAKL,UAAU,OACZ,kBAAC,EAAD,KACG,kBAAC,EAAD,KAEG,kBAAC,EAAD,MACG,kBAAC,EAAD,KACG,kBAAC,EAAD,OAEN,kBAAC,EAAD,UCffM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4628da5a.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react'\n\nexport const ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n\n   state = {\n      isLightTheme: true,\n      light: { syntax: '#555', ui: '#ddd', bg: '#eee'},\n      dark: { syntax: '#ddd', ui: '#333', bg: '#555'}\n   }\n\n   toggleTheme = () => {\n      this.setState({ isLightTheme: !this.state.isLightTheme });\n   }\n\n   render() {\n      return (\n         <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme}}>\n            {this.props.children}\n         </ThemeContext.Provider>\n      )\n   }\n}\n\nexport default ThemeContextProvider;","import React, { createContext, Component } from 'react';\n\nexport const AuthContext = createContext();\n\nclass AuthContextProvider extends Component {\n\n   state = {\n      isAuthenticated: true\n   }\n\n   toggleAuth = () => {\n      this.setState({\n         isAuthenticated: !this.state.isAuthenticated\n      })\n   }\n\n   render() {\n      return (\n         <AuthContext.Provider value={{...this.state, toggleAuth: this.toggleAuth}}>\n            {this.props.children}\n         </AuthContext.Provider>\n      )\n   }\n}\n\nexport default AuthContextProvider;\n","import React, { Component, useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport { AuthContext } from '../contexts/AuthContext';\n\nconst Navbar = () => {\n   const { isLightTheme, light, dark } = useContext(ThemeContext);\n   const { isAuthenticated, toggleAuth } = useContext(AuthContext);\n   const theme = isLightTheme ? light : dark;\n\n   return (\n      <nav style={{ background: theme.ui, color: theme.syntax }}>\n         <h1>Context App</h1>\n         <div>\n            Click on the text below to change state.\n         </div>\n         <br />\n         <div onClick={toggleAuth}>\n            {isAuthenticated ? 'Logged In' : 'Logged out'}\n         </div>\n         <ul>\n            <li>Home</li>\n            <li>About</li>\n            <li>Contact</li>\n         </ul>\n      </nav>\n   )\n}\n\nexport default Navbar\n","import React, { useState, createContext } from 'react'\n\nexport const BookContext = createContext();\n\nconst BookContextProvider = (props) => {\n   const [books, setBooks] = useState([\n      { title: 'book 1', id : 1 },\n      { title: 'book 2', id : 2 },\n      { title: 'book 3', id : 3 },\n      { title: 'book 4', id : 4 }\n   ]);\n   return (\n      <div>\n         <BookContext.Provider value={{books}}>\n            {props.children}\n         </BookContext.Provider>\n      </div>\n   )\n}\n\nexport default BookContextProvider;","import React, { Component, useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport { BookContext } from '../contexts/BookContext';\n\nconst BookList = () => {\n\n   const { isLightTheme, light, dark } = useContext(ThemeContext);\n   const { books } = useContext(BookContext);\n   const theme = isLightTheme ? light : dark;\n\n   return (\n      <div className=\"book-list\" style={{ color: theme.syntax, background: theme.bg }}>\n         <ul>\n            {books.map(book => {\n               return (\n                  <li key={book.id} style={{ background: theme.ui }}>{book.title}</li>\n               )\n            })}\n         </ul>\n      </div>\n   )\n}\n\nexport default BookList\n\n// Cleaner approach than using Provider-Consumer and Class based Context API Method.\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\n\nconst ThemeToggle = () => {\n   const { toggleTheme } = useContext(ThemeContext);\n   return (\n      <button onClick={toggleTheme}>Toggle the Theme</button>\n   )\n}\n\nexport default ThemeToggle\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport BookList from './components/BookList';\nimport ThemeContextProvider from './contexts/ThemeContext';\nimport ThemeToggle from './components/ThemeToggle';\nimport AuthContextProvider from './contexts/AuthContext';\nimport BookContextProvider from './contexts/BookContext';\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <ThemeContextProvider>\n            <AuthContextProvider>\n               {/* The below ones are going as props' children */}\n               <Navbar />\n                  <BookContextProvider>\n                     <BookList />\n                  </BookContextProvider>\n               <ThemeToggle />\n            </AuthContextProvider>\n         </ThemeContextProvider>\n      </div>\n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}